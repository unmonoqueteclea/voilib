name: voilib

x-defaults: &defaults
  logging:
    driver: "json-file"
    options:
      max-file: 5
      max-size: 10m
  restart: unless-stopped

services:
  backend:
    <<: *defaults
    image: voilib-backend:latest
    build:
      context: ../../backend
      dockerfile: dockerfile
      args:
        INSTALL_DEV: true
    depends_on:
      redis:
        condition: service_healthy
    env_file:
      - .env.dev
    ports:
      - ${VITE_API_PORT:-81}:80
    command:  uvicorn src.voilib.main:app --reload --host 0.0.0.0 --port 80
    volumes:
      - ../../backend/:/backend/
      - ../../data/:/data/
    healthcheck:
      test: ["CMD", "curl", "-f", "0.0.0.0/app/version"]
      interval: 6s
      timeout: 10s
      retries: 50

  frontend:
    <<: *defaults
    image: voilib-ui:latest
    depends_on:
      backend:
        condition: service_healthy
    env_file:
      - .env.dev
    ports:
      - ${VOILIB_FRONTEND_PORT:-80}:5173
    build:
      context: ../../frontend
      dockerfile: dockerfile.dev
    volumes:
      - ../../frontend/src:/frontend/src
      - ../../frontend/public:/frontend/public
    healthcheck:
      test: ["CMD", "curl", "-f", "0.0.0.0:5173"]
      interval: 6s
      timeout: 10s
      retries: 50

  management:
    <<: *defaults
    image: voilib-backend:latest
    env_file:
      - .env.dev
    build:
      context: ../../backend
      dockerfile: dockerfile
      args:
        INSTALL_DEV: true
    ports:
      - ${VOILIB_MANAGEMENT_PORT:-8501}:8501
    command: streamlit run src/voilib/management/🏠-Home.py
    volumes:
      - ../../backend/:/backend/
      - ../../data/:/data/

  redis:
    <<: *defaults
    image: redis:7.0.4-alpine
    hostname: ${REDIS_HOST}
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 30

  worker:
    <<: *defaults
    image: voilib-backend:latest
    depends_on:
      redis:
        condition: service_healthy
    env_file:
      - .env.dev
    build:
      context: ../../backend
      dockerfile: dockerfile
      args:
        INSTALL_DEV: true
    command: python src/voilib/worker.py
    volumes:
      - ../../backend/:/backend/
      - ../../data/:/data/

  qdrant:
    <<: *defaults
    image: qdrant/qdrant:v1.1.3
    expose:
      - 6333
    volumes:
      - ../../data/qdrant/:/qdrant/storage
